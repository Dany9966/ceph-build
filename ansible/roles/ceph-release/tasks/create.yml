---
- name: clone the ceph repository
  git:
    repo: https://github.com/ceph/ceph
    dest: ceph
    remote: upstream
    accept_hostkey: yes

- name: add security repo
  command: git remote add -f security git@github.com:ceph/ceph-private.git
    chdir: ceph
  ignore_errors: yes
  when: "release == 'SECURITY'"

# REGULAR / RC
# This assumes {{ branch }} is at the point where release is desired
- name: "git checkout and reset {{ branch }}-release to {{ branch }} for REGULAR or RC release"
  command: git checkout -B {{ branch }}-release {{ branch }}
    chdir: ceph
  when: "release == 'STABLE'" or "release == 'RELEASE_CANDIDATE'"

# HOTFIX
# This assumes hotfix has already been pushed to {{ branch }}-release branch on github
- name: "git checkout {{ branch }}-release for HOTFIX release"
  command: git checkout {{ branch }}-release
    chdir: ceph
  when: "release == 'HOTFIX'"

# SECURITY
- name: "git checkout security {{ branch }}-release branch"
  command: git checkout -B {{ branch }}-release security/{{ branch }}-release
    chdir: ceph
  ignore_errors: yes
  when: "release == 'SECURITY'"

- name: git submodule update
  command: git submodule update --init
    chdir: ceph

- name: check if CMakeLists.txt exists
  stat:
    path: ceph/CMakeLists.txt
  register: cmake_lists

- name: replace the version in CMakeLists.txt
  lineinfile:
    dest: ceph/CMakeLists.txt
    regexp: '^  VERSION \d+\.\d+\.\d+$'
    line: '  VERSION {{ version }}'
  when: cmake_lists.stat.exists

- name: set the debian version
  command: dch -v {{ version }}-1 -D stable "New upstream release"
    chdir: ceph
  environment:
    DEBEMAIL: "{{ debemail }}"
    DEBFULLNAME: "{{ debfullname }}"

- name: commit the version changes
  command: git commit -a -m "{{ version }}"
    chdir: ceph

- name: tag the version
  command: git tag -f "v{{ version }}" -m "v{{ version }}"
    chdir: ceph
